{"ast":null,"code":"var _jsxFileName = \"/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/ResponseList.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Table from \"./Table\";\nimport { fetchHubOrders, fetchHubOrdersSuppliers, fetchProducts } from \"../services/hub/actions\";\nimport { fetchHubProducts, fetchOrders, fetchSuppliersOrders } from \"../services/supplier/actions.js\";\nimport { updateCurrentType, updateDateRange } from \"../services/general/actions\";\nimport Card from \"../components/Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ResponseList(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const usePropChangeEffect = (func, deps) => {\n    _s();\n\n    const didMount = useRef(false);\n    useEffect(() => {\n      if (didMount.current) func();else didMount.current = true; // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n  };\n\n  _s(usePropChangeEffect, \"pOysHxGDAe5NFamaAuKx7OGo+cM=\");\n\n  usePropChangeEffect(() => {\n    if (props.hub) {\n      if (props.currentType === \"HubOrders\") {\n        props.fetchHubOrders(props.chosenDateRange[0], props.chosenDateRange[1]);\n      } else if (props.currentType === \"HubOrdersSuppliers\") {\n        props.fetchHubOrdersSuppliers(props.chosenDateRange[0], props.chosenDateRange[1]);\n      } else if (props.currentType === \"Products\") {\n        props.fetchProducts(props.chosenDateRange[0], props.chosenDateRange[1]);\n      }\n    }\n\n    if (props.supplier) {\n      if (props.currentType === \"HubProducts\") {\n        props.fetchHubProducts(props.chosenDateRange[0], props.chosenDateRange[1]);\n      } else if (props.currentType === \"Orders\") {\n        props.fetchOrders(props.chosenDateRange[0], props.chosenDateRange[1]);\n      } else if (props.currentType === \"SuppliersOrders\") {\n        props.fetchSuppliersOrders(props.chosenDateRange[0], props.chosenDateRange[1]);\n      }\n    }\n  }, [props.chosenDateRange]);\n\n  const whichTable = () => {\n    var tableHeader, tableBody;\n\n    switch (props.currentType) {\n      // Van Hub:\n      case \"HubOrders\":\n        tableBody = props.hubOrders;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          body: tableBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 16\n        }, this);\n\n      case \"HubOrdersSuppliers\":\n        tableBody = props.hubOrdersSuppliers;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          body: tableBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 16\n        }, this);\n\n      case \"Products\":\n        tableBody = props.hubProducts;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          body: tableBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this);\n      // Van Supplier\n\n      case \"HubProducts\":\n        tableBody = props.suppliersHubProducts;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          body: tableBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this);\n\n      case \"Orders\":\n        tableBody = props.orders;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          body: tableBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 16\n        }, this);\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: whichTable()\n  }, void 0, false);\n}\n\n_s2(ResponseList, \"N3uKpQCVx5M+Y7IEH23WezSSies=\", false, function () {\n  return [usePropChangeEffect];\n});\n\n_c = ResponseList;\n\nfunction mapStateToProps(state) {\n  return {\n    chosenDateRange: state.general.currentDateRange,\n    currentType: state.general.currentType,\n    hub: state.login.login_data.hub,\n    supplier: state.login.login_data.supplier,\n    hubOrders: state.hub.hubOrders,\n    hubOrdersSuppliers: state.hub.hubOrdersSuppliers,\n    hubProducts: state.hub.hubProducts,\n    //Hoort bij HUB\n    suppliersOrders: state.suppliers.suppliersOrders,\n    orders: state.suppliers.orders,\n    suppliersHubProducts: state.suppliers.suppliersHubProducts //Hoort bij Suppliers\n\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateCurrentType,\n  updateDateRange,\n  fetchHubOrders,\n  fetchHubOrdersSuppliers,\n  fetchProducts,\n  fetchHubProducts,\n  fetchOrders,\n  fetchSuppliersOrders\n})(ResponseList);\n\nvar _c;\n\n$RefreshReg$(_c, \"ResponseList\");","map":{"version":3,"sources":["/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/ResponseList.js"],"names":["React","useEffect","useRef","connect","Table","fetchHubOrders","fetchHubOrdersSuppliers","fetchProducts","fetchHubProducts","fetchOrders","fetchSuppliersOrders","updateCurrentType","updateDateRange","Card","ResponseList","props","usePropChangeEffect","func","deps","didMount","current","hub","currentType","chosenDateRange","supplier","whichTable","tableHeader","tableBody","hubOrders","hubOrdersSuppliers","hubProducts","suppliersHubProducts","orders","mapStateToProps","state","general","currentDateRange","login","login_data","suppliersOrders","suppliers"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport Table from \"./Table\";\nimport {\n  fetchHubOrders,\n  fetchHubOrdersSuppliers,\n  fetchProducts,\n} from \"../services/hub/actions\";\nimport {\n  fetchHubProducts,\n  fetchOrders,\n  fetchSuppliersOrders,\n} from \"../services/supplier/actions.js\";\nimport {\n  updateCurrentType,\n  updateDateRange,\n} from \"../services/general/actions\";\nimport Card from \"../components/Card\";\n\nfunction ResponseList(props) {\n  const usePropChangeEffect = (func, deps) => {\n    const didMount = useRef(false);\n\n    useEffect(() => {\n      if (didMount.current) func();\n      else didMount.current = true;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n  };\n\n  usePropChangeEffect(() => {\n    if (props.hub) {\n      if (props.currentType === \"HubOrders\") {\n        props.fetchHubOrders(\n          props.chosenDateRange[0],\n          props.chosenDateRange[1]\n        );\n      } else if (props.currentType === \"HubOrdersSuppliers\") {\n        props.fetchHubOrdersSuppliers(\n          props.chosenDateRange[0],\n          props.chosenDateRange[1]\n        );\n      } else if (props.currentType === \"Products\") {\n        props.fetchProducts(props.chosenDateRange[0], props.chosenDateRange[1]);\n      }\n    }\n    if (props.supplier) {\n      if (props.currentType === \"HubProducts\") {\n        props.fetchHubProducts(\n          props.chosenDateRange[0],\n          props.chosenDateRange[1]\n        );\n      } else if (props.currentType === \"Orders\") {\n        props.fetchOrders(props.chosenDateRange[0], props.chosenDateRange[1]);\n      } else if (props.currentType === \"SuppliersOrders\") {\n        props.fetchSuppliersOrders(\n          props.chosenDateRange[0],\n          props.chosenDateRange[1]\n        );\n      }\n    }\n  }, [props.chosenDateRange]);\n\n  const whichTable = () => {\n    var tableHeader, tableBody;\n    switch (props.currentType) {\n      // Van Hub:\n      case \"HubOrders\":\n        tableBody = props.hubOrders;\n\n        return <Card body={tableBody} />;\n      case \"HubOrdersSuppliers\":\n        tableBody = props.hubOrdersSuppliers;\n\n        return <Card body={tableBody} />;\n\n      case \"Products\":\n        tableBody = props.hubProducts;\n        return <Card body={tableBody} />;\n\n      // Van Supplier\n      case \"HubProducts\":\n        tableBody = props.suppliersHubProducts;\n        return <Card body={tableBody} />;\n\n      case \"Orders\":\n        tableBody = props.orders;\n        return <Card body={tableBody} />;\n      default:\n        break;\n    }\n  };\n\n  return <>{whichTable()}</>;\n}\n\nfunction mapStateToProps(state) {\n  return {\n    chosenDateRange: state.general.currentDateRange,\n    currentType: state.general.currentType,\n    hub: state.login.login_data.hub,\n    supplier: state.login.login_data.supplier,\n    hubOrders: state.hub.hubOrders,\n    hubOrdersSuppliers: state.hub.hubOrdersSuppliers,\n    hubProducts: state.hub.hubProducts, //Hoort bij HUB\n    suppliersOrders: state.suppliers.suppliersOrders,\n    orders: state.suppliers.orders,\n    suppliersHubProducts: state.suppliers.suppliersHubProducts, //Hoort bij Suppliers\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateCurrentType,\n  updateDateRange,\n  fetchHubOrders,\n  fetchHubOrdersSuppliers,\n  fetchProducts,\n  fetchHubProducts,\n  fetchOrders,\n  fetchSuppliersOrders,\n})(ResponseList);\n"]},"metadata":{},"sourceType":"module"}