{"ast":null,"code":"var _jsxFileName = \"/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/Signature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport SignaturePad from \"react-signature-canvas\";\nimport styles from \"../styles/Signature.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { confirmOrder } from \"../services/order/actions\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Signature(props) {\n  _s();\n\n  const [trimmedDataURL, setTrimmedDataURL] = useState(\"\");\n  var [sigPad, setSigPad] = useState({});\n  const [isImage, setIsImage] = useState(false);\n\n  const clear = () => {\n    sigPad.clear();\n  };\n\n  useEffect(() => {\n    if (!sigPad.isEmpty()) {\n      console.log(\"not empty\");\n      setIsImage(true);\n      let imageData = trimmedDataURL.substring(22);\n      console.log(trimmedDataURL.length);\n      props.confirmOrder(props.orderId, imageData);\n      clear();\n    }\n  }, [trimmedDataURL]);\n\n  const trim = () => {\n    setTrimmedDataURL(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\n    console.log(trimmedDataURL);\n  };\n\n  if (isImage) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/scanner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sigContainer,\n        children: /*#__PURE__*/_jsxDEV(SignaturePad, {\n          canvasProps: {\n            className: \"sigCanvas\"\n          },\n          ref: ref => {\n            sigPad = ref;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"space-evenly\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: () => clear(),\n          children: \"Maak leeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          variant: \"contained\",\n          onClick: () => trim(),\n          children: \"Bevestig\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Signature, \"fAZhBNi8PWRywxo2nv6yptSz1EY=\");\n\n_c = Signature;\n\nfunction mapStateToProps(state) {\n  return {\n    orderId: state.order.orderId\n  };\n}\n\nexport default connect(mapStateToProps, {\n  confirmOrder\n})(Signature);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signature\");","map":{"version":3,"sources":["/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/Signature.js"],"names":["React","useState","useEffect","SignaturePad","styles","Button","connect","confirmOrder","Link","Redirect","Signature","props","trimmedDataURL","setTrimmedDataURL","sigPad","setSigPad","isImage","setIsImage","clear","isEmpty","console","log","imageData","substring","length","orderId","trim","getTrimmedCanvas","toDataURL","container","sigContainer","className","ref","display","justifyContent","mapStateToProps","state","order"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SignaturePad from \"react-signature-canvas\";\nimport styles from \"../styles/Signature.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { confirmOrder } from \"../services/order/actions\";\nimport { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\n\nfunction Signature(props) {\n  const [trimmedDataURL, setTrimmedDataURL] = useState(\"\");\n  var [sigPad, setSigPad] = useState({});\n  const [isImage, setIsImage] = useState(false);\n\n  const clear = () => {\n    sigPad.clear();\n  };\n\n  useEffect(() => {\n    if (!sigPad.isEmpty()) {\n      console.log(\"not empty\");\n      setIsImage(true);\n      let imageData = trimmedDataURL.substring(22);\n      console.log(trimmedDataURL.length);\n      props.confirmOrder(props.orderId, imageData);\n      clear();\n    }\n  }, [trimmedDataURL]);\n\n  const trim = () => {\n    setTrimmedDataURL(sigPad.getTrimmedCanvas().toDataURL(\"image/png\"));\n    console.log(trimmedDataURL);\n  };\n\n  if (isImage) {\n    return <Redirect to=\"/scanner\" />;\n  } else {\n    return (\n      <div className={styles.container}>\n        <div className={styles.sigContainer}>\n          <SignaturePad\n            canvasProps={{ className: \"sigCanvas\" }}\n            ref={(ref) => {\n              sigPad = ref;\n            }}\n          />\n        </div>\n        <br />\n        <div style={{ display: \"flex\", justifyContent: \"space-evenly\" }}>\n          <Button color=\"primary\" variant=\"contained\" onClick={() => clear()}>\n            Maak leeg\n          </Button>\n          {/* {checkIfCanvasEmpty()} */}\n          {/* <Link to=\"/scanner\" style={{ textDecoration: \"none\" }}>*/}\n          <Button color=\"primary\" variant=\"contained\" onClick={() => trim()}>\n            Bevestig\n          </Button>\n          {/* </Link> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderId: state.order.orderId,\n  };\n}\n\nexport default connect(mapStateToProps, { confirmOrder })(Signature);\n"]},"metadata":{},"sourceType":"module"}