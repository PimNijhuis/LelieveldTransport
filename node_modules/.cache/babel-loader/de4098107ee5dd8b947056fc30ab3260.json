{"ast":null,"code":"var _jsxFileName = \"/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/Scanner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport QrReader from \"modern-react-qr-reader\";\nimport { Redirect } from \"react-router-dom\";\nimport { setOrderId } from \"../services/order/actions\";\nimport { updateCurrentType } from \"../services/general/actions\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ScannerComponent(props) {\n  _s();\n\n  // const classes = useStyles();\n  const [hubOrderId, setHubOrderId] = useState(\"\");\n\n  const validateHubOrder = data => {\n    const requestData = {\n      id: data\n    };\n    axios.post(\"/fetch_order_by_qrcode\", requestData).then(response => {\n      if (response.data.code === 500) {\n        alert(\"Deze order is niet beschikbaar\");\n        return;\n      } else {\n        setHubOrderId(data);\n        props.setOrderId(data);\n        props.updateCurrentType(\"Pickup\");\n        return;\n      }\n    }).catch(err => {\n      console.log(\"[order.actions.js] confirmOrder || Could not confirm order. Try again later.\");\n    });\n  };\n\n  const handleScan = data => {\n    if (data) {\n      validateHubOrder(data);\n    }\n  };\n\n  const handleError = err => {\n    console.error(err);\n  };\n\n  if (hubOrderId) {\n    props.setOrderId(hubOrderId);\n    props.updateCurrentType(\"Pickup\");\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: hubOrderId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QrReader, {\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n}\n\n_s(ScannerComponent, \"Y2mjSQQ8k+ZUhlJiYCGFNzw+KV8=\");\n\n_c = ScannerComponent;\n\nfunction mapStateToProps(state) {\n  return {\n    currentType: state.general.currentType,\n    orderId: state.order.orderId\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateCurrentType,\n  setOrderId\n})(ScannerComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"ScannerComponent\");","map":{"version":3,"sources":["/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/Scanner.js"],"names":["React","useState","QrReader","Redirect","setOrderId","updateCurrentType","connect","axios","ScannerComponent","props","hubOrderId","setHubOrderId","validateHubOrder","data","requestData","id","post","then","response","code","alert","catch","err","console","log","handleScan","handleError","error","mapStateToProps","state","currentType","general","orderId","order"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,iBAAT,QAAkC,6BAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC/B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMW,gBAAgB,GAAIC,IAAD,IAAU;AACjC,UAAMC,WAAW,GAAG;AAClBC,MAAAA,EAAE,EAAEF;AADc,KAApB;AAGAN,IAAAA,KAAK,CACFS,IADH,CACQ,wBADR,EACkCF,WADlC,EAEGG,IAFH,CAESC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACL,IAAT,CAAcM,IAAd,KAAuB,GAA3B,EAAgC;AAC9BC,QAAAA,KAAK,CAAC,gCAAD,CAAL;AACA;AACD,OAHD,MAGO;AACLT,QAAAA,aAAa,CAACE,IAAD,CAAb;AACAJ,QAAAA,KAAK,CAACL,UAAN,CAAiBS,IAAjB;AACAJ,QAAAA,KAAK,CAACJ,iBAAN,CAAwB,QAAxB;AACA;AACD;AACF,KAZH,EAaGgB,KAbH,CAaUC,GAAD,IAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CACE,8EADF;AAGD,KAjBH;AAkBD,GAtBD;;AAwBA,QAAMC,UAAU,GAAIZ,IAAD,IAAU;AAC3B,QAAIA,IAAJ,EAAU;AACRD,MAAAA,gBAAgB,CAACC,IAAD,CAAhB;AACD;AACF,GAJD;;AAMA,QAAMa,WAAW,GAAIJ,GAAD,IAAS;AAC3BC,IAAAA,OAAO,CAACI,KAAR,CAAcL,GAAd;AACD,GAFD;;AAIA,MAAIZ,UAAJ,EAAgB;AACdD,IAAAA,KAAK,CAACL,UAAN,CAAiBM,UAAjB;AACAD,IAAAA,KAAK,CAACJ,iBAAN,CAAwB,QAAxB;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAJD,MAIO;AACL,wBACE;AAAA,8BACE;AAAA,kBAAIK;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEgB,WAAnB;AAAgC,QAAA,MAAM,EAAED;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBADF;AAMD;AACF;;GAlDQjB,gB;;KAAAA,gB;;AAoDT,SAASoB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACE,OAAN,CAAcD,WADtB;AAELE,IAAAA,OAAO,EAAEH,KAAK,CAACI,KAAN,CAAYD;AAFhB,GAAP;AAID;;AAED,eAAe1B,OAAO,CAACsB,eAAD,EAAkB;AACtCvB,EAAAA,iBADsC;AAEtCD,EAAAA;AAFsC,CAAlB,CAAP,CAGZI,gBAHY,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport QrReader from \"modern-react-qr-reader\";\nimport { Redirect } from \"react-router-dom\";\nimport { setOrderId } from \"../services/order/actions\";\nimport { updateCurrentType } from \"../services/general/actions\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nfunction ScannerComponent(props) {\n  // const classes = useStyles();\n  const [hubOrderId, setHubOrderId] = useState(\"\");\n\n  const validateHubOrder = (data) => {\n    const requestData = {\n      id: data,\n    };\n    axios\n      .post(\"/fetch_order_by_qrcode\", requestData)\n      .then((response) => {\n        if (response.data.code === 500) {\n          alert(\"Deze order is niet beschikbaar\");\n          return;\n        } else {\n          setHubOrderId(data);\n          props.setOrderId(data);\n          props.updateCurrentType(\"Pickup\");\n          return;\n        }\n      })\n      .catch((err) => {\n        console.log(\n          \"[order.actions.js] confirmOrder || Could not confirm order. Try again later.\"\n        );\n      });\n  };\n\n  const handleScan = (data) => {\n    if (data) {\n      validateHubOrder(data);\n    }\n  };\n\n  const handleError = (err) => {\n    console.error(err);\n  };\n\n  if (hubOrderId) {\n    props.setOrderId(hubOrderId);\n    props.updateCurrentType(\"Pickup\");\n    return <Redirect to=\"/order\" />;\n  } else {\n    return (\n      <>\n        <p>{hubOrderId}</p>\n        <QrReader onError={handleError} onScan={handleScan} />\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currentType: state.general.currentType,\n    orderId: state.order.orderId,\n  };\n}\n\nexport default connect(mapStateToProps, {\n  updateCurrentType,\n  setOrderId,\n})(ScannerComponent);\n"]},"metadata":{},"sourceType":"module"}