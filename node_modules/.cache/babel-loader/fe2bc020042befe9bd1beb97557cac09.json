{"ast":null,"code":"var _jsxFileName = \"/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/Table.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { loginAPI } from \"../services/login/actions\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Redirect } from \"react-router-dom\";\nimport LazyLoad from \"react-lazyload\";\nimport { formatPrice } from \"../utils/priceUtil\";\nimport { setOrderId, setHubId, setDeliveryDate, setPickuppoint } from \"../services/order/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TableComponent(props) {\n  _s();\n\n  const [redirect, setRedirect] = React.useState(false);\n  var columnsMapping = props.header;\n  var data = props.body;\n\n  const setData = rowData => {\n    switch (props.currentType) {\n      case \"HubOrders\":\n        props.setOrderId(rowData.id);\n        break;\n\n      case \"HubOrdersSuppliers\":\n        props.setOrderId(rowData.supplier_id);\n        props.setHubId(rowData.hub);\n        props.setDeliveryDate(rowData.delivery_date);\n        props.setPickuppoint(rowData.pickuppoint);\n        break;\n\n      case \"SuppliersOrders\":\n        props.setOrderId(rowData.order_number);\n        break;\n\n      case \"Orders\":\n        props.setOrderId(rowData.order_id);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const getColumnComponent = (column, rowData) => {\n    switch (column.dataName) {\n      case \"rows\":\n      case \"quantity\":\n      case \"delivery_date\":\n      case \"package\":\n      case \"order_id\":\n      case \"order_number\":\n      case \"code\":\n        return /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: rowData[column.dataName]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 16\n        }, this);\n\n      case \"amount\":\n      case \"salesprice\":\n        return /*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: formatPrice(rowData[column.dataName])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this);\n      //return <Box textAlign=\"center\">{rowData[column.dataName]}</Box>;\n\n      case \"combi\":\n        return rowData[\"name\"] + \"\\n\" + rowData[\"supplier\"];\n\n      case \"arrow_button_order\":\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/order\",\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {\n            color: \"primary\",\n            onClick: () => setData(rowData)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this);\n\n      default:\n        return rowData[column.dataName];\n    }\n  };\n\n  var isOrderScreen = window.location.hash === \"#/order\";\n\n  if (redirect) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }, this);\n  } else if ((props.currentType === \"HubOrders\" || props.currentType === \"HubOrdersSuppliers\" || props.currentType === \"Orders\" || props.currentType === \"SuppliersOrders\") && !isOrderScreen) {\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table\",\n        \"aria-label\": \"spanning table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columnsMapping.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: column.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.map(rowData => /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 50\n            },\n            onClick: () => {\n              setData(rowData);\n              setRedirect(true);\n            },\n            children: columnsMapping.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              padding: \"none\",\n              children: /*#__PURE__*/_jsxDEV(LazyLoad, {\n                placeholder: \"Loading\",\n                children: getColumnComponent(column, rowData)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this))\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: \"table\",\n        \"aria-label\": \"spanning table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 50\n            },\n            children: columnsMapping.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              style: {\n                fontWeight: \"bold\"\n              },\n              children: column.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.map(rowData => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columnsMapping.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              padding: \"none\",\n              children: /*#__PURE__*/_jsxDEV(LazyLoad, {\n                placeholder: \"Loading\",\n                children: [console.log(rowData), getColumnComponent(column, rowData)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this))\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(TableComponent, \"CWdZc/XNNsJ2bMqPvAv6+207j+o=\");\n\n_c = TableComponent;\n\nconst mapStateToProps = state => ({\n  currentType: state.general.currentType,\n  isSingleOrder: state.general.isSingleOrder\n});\n\nexport default connect(mapStateToProps, {\n  loginAPI,\n  setOrderId,\n  setHubId,\n  setDeliveryDate,\n  setPickuppoint\n})(TableComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["/Users/pim.nijhuis/Documents/Business/Trigate/LelieveldTransport/src/components/Table.js"],"names":["React","connect","loginAPI","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","ArrowForwardIcon","Link","Box","Redirect","LazyLoad","formatPrice","setOrderId","setHubId","setDeliveryDate","setPickuppoint","TableComponent","props","redirect","setRedirect","useState","columnsMapping","header","data","body","setData","rowData","currentType","id","supplier_id","hub","delivery_date","pickuppoint","order_number","order_id","getColumnComponent","column","dataName","textDecoration","isOrderScreen","window","location","hash","map","fontWeight","name","height","console","log","mapStateToProps","state","general","isSingleOrder"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { loginAPI } from \"../services/login/actions\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ArrowForwardIcon from \"@material-ui/icons/ArrowForward\";\nimport { Link } from \"react-router-dom\";\nimport Box from \"@material-ui/core/Box\";\nimport { Redirect } from \"react-router-dom\";\nimport LazyLoad from \"react-lazyload\";\n\nimport { formatPrice } from \"../utils/priceUtil\";\nimport {\n  setOrderId,\n  setHubId,\n  setDeliveryDate,\n  setPickuppoint,\n} from \"../services/order/actions\";\n\nfunction TableComponent(props) {\n  const [redirect, setRedirect] = React.useState(false);\n\n  var columnsMapping = props.header;\n  var data = props.body;\n\n  const setData = (rowData) => {\n    switch (props.currentType) {\n      case \"HubOrders\":\n        props.setOrderId(rowData.id);\n        break;\n      case \"HubOrdersSuppliers\":\n        props.setOrderId(rowData.supplier_id);\n        props.setHubId(rowData.hub);\n        props.setDeliveryDate(rowData.delivery_date);\n        props.setPickuppoint(rowData.pickuppoint);\n        break;\n      case \"SuppliersOrders\":\n        props.setOrderId(rowData.order_number);\n        break;\n      case \"Orders\":\n        props.setOrderId(rowData.order_id);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getColumnComponent = (column, rowData) => {\n    switch (column.dataName) {\n      case \"rows\":\n      case \"quantity\":\n      case \"delivery_date\":\n      case \"package\":\n      case \"order_id\":\n      case \"order_number\":\n      case \"code\":\n        return <Box textAlign=\"center\">{rowData[column.dataName]}</Box>;\n      case \"amount\":\n      case \"salesprice\":\n        return (\n          <Box textAlign=\"center\">{formatPrice(rowData[column.dataName])}</Box>\n        );\n      //return <Box textAlign=\"center\">{rowData[column.dataName]}</Box>;\n      case \"combi\":\n        return rowData[\"name\"] + \"\\n\" + rowData[\"supplier\"];\n      case \"arrow_button_order\":\n        return (\n          <Link to=\"/order\" style={{ textDecoration: \"none\" }}>\n            <ArrowForwardIcon\n              color=\"primary\"\n              onClick={() => setData(rowData)}\n            />\n          </Link>\n        );\n      default:\n        return rowData[column.dataName];\n    }\n  };\n\n  var isOrderScreen = window.location.hash === \"#/order\";\n\n  if (redirect) {\n    return <Redirect to=\"/order\" />;\n  } else if (\n    (props.currentType === \"HubOrders\" ||\n      props.currentType === \"HubOrdersSuppliers\" ||\n      props.currentType === \"Orders\" ||\n      props.currentType === \"SuppliersOrders\") &&\n    !isOrderScreen\n  ) {\n    return (\n      <TableContainer component={Paper}>\n        <Table className=\"table\" aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow>\n              {columnsMapping.map((column) => (\n                <TableCell align=\"left\" style={{ fontWeight: \"bold\" }}>\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((rowData) => (\n              <TableRow\n                style={{ height: 50 }}\n                key={data.id}\n                onClick={() => {\n                  setData(rowData);\n                  setRedirect(true);\n                }}\n              >\n                {columnsMapping.map((column) => (\n                  <TableCell align=\"left\" padding=\"none\">\n                    <LazyLoad placeholder=\"Loading\">\n                      {getColumnComponent(column, rowData)}\n                    </LazyLoad>\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  } else {\n    return (\n      <TableContainer component={Paper}>\n        <Table className=\"table\" aria-label=\"spanning table\">\n          <TableHead>\n            <TableRow style={{ height: 50 }}>\n              {columnsMapping.map((column) => (\n                <TableCell align=\"left\" style={{ fontWeight: \"bold\" }}>\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {data.map((rowData) => (\n              <TableRow key={data.id}>\n                {columnsMapping.map((column) => (\n                  <TableCell align=\"left\" padding=\"none\">\n                    <LazyLoad placeholder=\"Loading\">\n                      {console.log(rowData)}\n                      {getColumnComponent(column, rowData)}\n                    </LazyLoad>\n                  </TableCell>\n                ))}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentType: state.general.currentType,\n  isSingleOrder: state.general.isSingleOrder,\n});\n\nexport default connect(mapStateToProps, {\n  loginAPI,\n  setOrderId,\n  setHubId,\n  setDeliveryDate,\n  setPickuppoint,\n})(TableComponent);\n"]},"metadata":{},"sourceType":"module"}