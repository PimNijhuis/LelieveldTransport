'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _omit = require('lodash/omit');

var _omit2 = _interopRequireDefault(_omit);

var _values = require('lodash/values');

var _values2 = _interopRequireDefault(_values);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _elementType = require('rsuite-utils/lib/propTypes/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

var _SafeAnchor = require('./SafeAnchor');

var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

var _decorate = require('./utils/decorate');

var _decorate2 = _interopRequireDefault(_decorate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  active: _propTypes2.default.bool,
  disabled: _propTypes2.default.bool,
  block: _propTypes2.default.bool,
  href: _propTypes2.default.string,
  type: _propTypes2.default.oneOf(['button', 'reset', 'submit']),
  componentClass: _elementType2.default,
  prefixClass: _propTypes2.default.string
};

var defaultProps = {
  prefixClass: 'btn',
  href: null,
  componentClass: 'button',
  active: false,
  type: 'button',
  disabled: false,
  block: false,
  shape: 'default'
};

var Button = function (_React$Component) {
  _inherits(Button, _React$Component);

  function Button() {
    _classCallCheck(this, Button);

    return _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).apply(this, arguments));
  }

  _createClass(Button, [{
    key: 'getClassNames',
    value: function getClassNames() {
      var _props = this.props,
          active = _props.active,
          disabled = _props.disabled,
          block = _props.block,
          className = _props.className,
          prefixClass = _props.prefixClass;

      return (0, _classnames2.default)(_extends({}, (0, _decorate.getClassNames)(this.props), _defineProperty({
        active: active,
        disabled: disabled
      }, prefixClass + '-block', block)), className);
    }
  }, {
    key: 'renderAnchor',
    value: function renderAnchor() {
      var _props2 = this.props,
          href = _props2.href,
          props = _objectWithoutProperties(_props2, ['href']);

      var elementProps = (0, _omit2.default)(props, Object.keys(propTypes));
      return _react2.default.createElement(_SafeAnchor2.default, _extends({
        href: href
      }, elementProps, {
        className: this.getClassNames()
      }));
    }
  }, {
    key: 'renderButton',
    value: function renderButton() {
      var _props3 = this.props,
          Component = _props3.componentClass,
          disabled = _props3.disabled,
          type = _props3.type,
          props = _objectWithoutProperties(_props3, ['componentClass', 'disabled', 'type']);

      var elementProps = (0, _omit2.default)(props, Object.keys(propTypes));

      return _react2.default.createElement(Component, _extends({}, elementProps, {
        type: type,
        disabled: disabled,
        className: this.getClassNames()
      }));
    }
  }, {
    key: 'render',
    value: function render() {

      if (this.props.href) {
        return this.renderAnchor();
      }

      return this.renderButton();
    }
  }]);

  return Button;
}(_react2.default.Component);

Button.propTypes = propTypes;
Button.defaultProps = defaultProps;

exports.default = (0, _decorate2.default)({
  size: true,
  shape: {
    oneOf: [].concat(_toConsumableArray((0, _values2.default)(_decorate.STATE)), _toConsumableArray((0, _values2.default)(_decorate.STYLES))),
    default: _decorate.STYLES.DEFAULT
  }
})(Button);