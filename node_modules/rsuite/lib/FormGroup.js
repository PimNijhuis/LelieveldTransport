'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _decorate = require('./utils/decorate');

var _decorate2 = _interopRequireDefault(_decorate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  prefixClass: _propTypes2.default.string,
  controlId: _propTypes2.default.string,
  isValid: _propTypes2.default.bool,
  validationState: _propTypes2.default.oneOf(['success', 'warning', 'error'])
};

var defaultProps = {
  prefixClass: 'form-group',
  controlId: undefined,
  isValid: undefined,
  validationState: undefined
};

var childContextTypes = {
  formGroup: _propTypes2.default.object.isRequired
};

var FormGroup = function (_React$Component) {
  _inherits(FormGroup, _React$Component);

  function FormGroup() {
    _classCallCheck(this, FormGroup);

    return _possibleConstructorReturn(this, (FormGroup.__proto__ || Object.getPrototypeOf(FormGroup)).apply(this, arguments));
  }

  _createClass(FormGroup, [{
    key: 'getChildContext',
    value: function getChildContext() {
      var _props = this.props,
          controlId = _props.controlId,
          validationState = _props.validationState;

      return {
        formGroup: {
          controlId: controlId,
          validationState: validationState
        }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _extends2;

      var _props2 = this.props,
          validationState = _props2.validationState,
          className = _props2.className,
          controlId = _props2.controlId,
          prefixClass = _props2.prefixClass,
          isValid = _props2.isValid,
          props = _objectWithoutProperties(_props2, ['validationState', 'className', 'controlId', 'prefixClass', 'isValid']);

      var classes = (0, _classnames2.default)(_extends({}, (0, _decorate.getClassNames)(this.props), (_extends2 = {}, _defineProperty(_extends2, 'has-' + validationState, !!validationState), _defineProperty(_extends2, 'has-success', !validationState && isValid), _defineProperty(_extends2, 'has-error', !validationState && isValid === false), _extends2)), className);

      return _react2.default.createElement('div', _extends({}, props, {
        className: classes,
        role: 'group'
      }));
    }
  }]);

  return FormGroup;
}(_react2.default.Component);

FormGroup.propTypes = propTypes;
FormGroup.defaultProps = defaultProps;
FormGroup.childContextTypes = childContextTypes;

exports.default = (0, _decorate2.default)({
  size: true
})(FormGroup);