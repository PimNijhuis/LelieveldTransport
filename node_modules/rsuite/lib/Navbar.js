'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _elementType = require('rsuite-utils/lib/propTypes/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

var _NavbarBrand = require('./NavbarBrand');

var _NavbarBrand2 = _interopRequireDefault(_NavbarBrand);

var _NavbarCollapse = require('./NavbarCollapse');

var _NavbarCollapse2 = _interopRequireDefault(_NavbarCollapse);

var _NavbarHeader = require('./NavbarHeader');

var _NavbarHeader2 = _interopRequireDefault(_NavbarHeader);

var _NavbarToggle = require('./NavbarToggle');

var _NavbarToggle2 = _interopRequireDefault(_NavbarToggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  prefixClass: _propTypes2.default.string,
  fixedTop: _propTypes2.default.bool,
  fixedBottom: _propTypes2.default.bool,
  inverse: _propTypes2.default.bool,
  componentClass: _elementType2.default,
  onToggle: _propTypes2.default.func
};

var defaultProps = {
  prefixClass: 'navbar',
  componentClass: 'div',
  fixedTop: false,
  fixedBottom: false,
  inverse: false,
  onToggle: undefined
};

var childContextTypes = {
  prefixClass: _propTypes2.default.string,
  navbar: _propTypes2.default.bool,
  expanded: _propTypes2.default.bool,
  onToggle: _propTypes2.default.func
};

var Navbar = function (_React$Component) {
  _inherits(Navbar, _React$Component);

  function Navbar(props) {
    _classCallCheck(this, Navbar);

    var _this = _possibleConstructorReturn(this, (Navbar.__proto__ || Object.getPrototypeOf(Navbar)).call(this, props));

    _this.state = {
      expanded: false
    };
    _this.handleToggle = _this.handleToggle.bind(_this);
    return _this;
  }

  _createClass(Navbar, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        navbar: true,
        prefixClass: this.props.prefixClass,
        onToggle: this.handleToggle,
        expanded: this.state.expanded
      };
    }
  }, {
    key: 'handleToggle',
    value: function handleToggle() {
      var onToggle = this.props.onToggle;

      this.setState({
        expanded: !this.state.expanded
      });
      onToggle && onToggle();
    }
  }, {
    key: 'render',
    value: function render() {
      var _classNames;

      var _props = this.props,
          inverse = _props.inverse,
          fixedTop = _props.fixedTop,
          fixedBottom = _props.fixedBottom,
          className = _props.className,
          prefixClass = _props.prefixClass,
          onToggle = _props.onToggle,
          Component = _props.componentClass,
          props = _objectWithoutProperties(_props, ['inverse', 'fixedTop', 'fixedBottom', 'className', 'prefixClass', 'onToggle', 'componentClass']);

      var classes = (0, _classnames2.default)((_classNames = {}, _defineProperty(_classNames, prefixClass + '-default', !inverse), _defineProperty(_classNames, prefixClass + '-inverse', inverse), _defineProperty(_classNames, prefixClass + '-fixed-top', fixedTop), _defineProperty(_classNames, prefixClass + '-fixed-bottom', fixedBottom), _classNames), prefixClass, className);

      return _react2.default.createElement(Component, _extends({}, props, {
        className: classes,
        role: 'navigation'
      }));
    }
  }]);

  return Navbar;
}(_react2.default.Component);

Navbar.propTypes = propTypes;
Navbar.defaultProps = defaultProps;
Navbar.childContextTypes = childContextTypes;

Navbar.Brand = _NavbarBrand2.default;
Navbar.Header = _NavbarHeader2.default;
Navbar.Collapse = _NavbarCollapse2.default;
Navbar.Toggle = _NavbarToggle2.default;

exports.default = Navbar;