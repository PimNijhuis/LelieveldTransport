'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _omit = require('lodash/omit');

var _omit2 = _interopRequireDefault(_omit);

var _elementType = require('rsuite-utils/lib/propTypes/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

var _PaginationButton = require('./PaginationButton');

var _PaginationButton2 = _interopRequireDefault(_PaginationButton);

var _SafeAnchor = require('./SafeAnchor');

var _SafeAnchor2 = _interopRequireDefault(_SafeAnchor);

var _decorate = require('./utils/decorate');

var _decorate2 = _interopRequireDefault(_decorate);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  activePage: _propTypes2.default.number,
  pages: _propTypes2.default.number,
  maxButtons: _propTypes2.default.number,
  boundaryLinks: _propTypes2.default.bool,
  ellipsis: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.node]),
  first: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.node]),
  last: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.node]),
  prev: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.node]),
  next: _propTypes2.default.oneOfType([_propTypes2.default.bool, _propTypes2.default.node]),
  onSelect: _propTypes2.default.func,
  buttonComponentClass: _elementType2.default,
  prefixClass: _propTypes2.default.string
};

var defaultProps = {
  activePage: 1,
  pages: 1,
  maxButtons: 0,
  first: false,
  last: false,
  prev: false,
  next: false,
  ellipsis: false,
  boundaryLinks: false,
  prefixClass: 'pagination',
  buttonComponentClass: _SafeAnchor2.default,
  onSelect: undefined
};

var Pagination = function (_React$Component) {
  _inherits(Pagination, _React$Component);

  function Pagination() {
    _classCallCheck(this, Pagination);

    return _possibleConstructorReturn(this, (Pagination.__proto__ || Object.getPrototypeOf(Pagination)).apply(this, arguments));
  }

  _createClass(Pagination, [{
    key: 'renderPageButtons',
    value: function renderPageButtons() {

      var pageButtons = [];
      var startPage = void 0;
      var endPage = void 0;
      var hasHiddenPagesAfter = void 0;
      var _props = this.props,
          maxButtons = _props.maxButtons,
          activePage = _props.activePage,
          pages = _props.pages,
          ellipsis = _props.ellipsis,
          boundaryLinks = _props.boundaryLinks;


      if (maxButtons) {
        var hiddenPagesBefore = activePage - parseInt(maxButtons / 2, 10);
        startPage = hiddenPagesBefore > 1 ? hiddenPagesBefore : 1;
        hasHiddenPagesAfter = startPage + maxButtons <= pages;

        if (!hasHiddenPagesAfter) {
          endPage = pages;
          startPage = pages - maxButtons + 1;
          if (startPage < 1) {
            startPage = 1;
          }
        } else {
          endPage = startPage + maxButtons - 1;
        }
      } else {
        startPage = 1;
        endPage = pages;
      }

      for (var pagenumber = startPage; pagenumber <= endPage; pagenumber += 1) {
        pageButtons.push(this.renderItem({
          key: pagenumber,
          eventKey: pagenumber,
          active: pagenumber === activePage,
          children: pagenumber
        }));
      }

      if (boundaryLinks && ellipsis && startPage !== 1) {

        pageButtons.unshift(this.renderItem({
          key: 'ellipsisFirst',
          disabled: true,
          children: _react2.default.createElement(
            'span',
            { 'aria-label': 'More' },
            ellipsis === true ? '\u2026' : ellipsis
          )
        }));

        pageButtons.unshift(this.renderItem({
          key: 1,
          eventKey: 1,
          children: 1
        }));
      }

      if (maxButtons && hasHiddenPagesAfter && ellipsis) {
        pageButtons.push(this.renderItem({
          key: 'ellipsis',
          disabled: true,
          children: _react2.default.createElement(
            'span',
            { 'aria-label': 'More' },
            ellipsis === true ? '\u2026' : ellipsis
          )
        }));

        if (boundaryLinks && endPage !== pages) {
          pageButtons.push(this.renderItem({
            key: pages,
            eventKey: pages,
            disabled: false,
            children: pages
          }));
        }
      }
      return pageButtons;
    }
  }, {
    key: 'renderPrev',
    value: function renderPrev() {
      var _props2 = this.props,
          activePage = _props2.activePage,
          prev = _props2.prev;


      if (!this.props.prev) {
        return null;
      }

      return this.renderItem({
        key: 'prev',
        eventKey: activePage - 1,
        disabled: activePage === 1,
        children: _react2.default.createElement(
          'span',
          { 'aria-label': 'Previous' },
          prev === true ? '\u2039' : prev
        )
      });
    }
  }, {
    key: 'renderNext',
    value: function renderNext() {
      var _props3 = this.props,
          pages = _props3.pages,
          activePage = _props3.activePage,
          next = _props3.next;


      if (!this.props.next) {
        return null;
      }

      return this.renderItem({
        key: 'next',
        eventKey: activePage + 1,
        disabled: activePage >= pages,
        children: _react2.default.createElement(
          'span',
          { 'aria-label': 'Next' },
          next === true ? '\u203A' : next
        )
      });
    }
  }, {
    key: 'renderFirst',
    value: function renderFirst() {
      var _props4 = this.props,
          activePage = _props4.activePage,
          first = _props4.first;


      if (!first) {
        return null;
      }

      return this.renderItem({
        key: 'first',
        eventKey: 1,
        disabled: activePage === 1,
        children: _react2.default.createElement(
          'span',
          { 'aria-label': 'First' },
          first === true ? '\xAB' : first
        )
      });
    }
  }, {
    key: 'renderLast',
    value: function renderLast() {
      var _props5 = this.props,
          pages = _props5.pages,
          activePage = _props5.activePage,
          last = _props5.last;


      if (!last) {
        return null;
      }

      return this.renderItem({
        key: 'last',
        eventKey: pages,
        disabled: activePage >= pages,
        children: _react2.default.createElement(
          'span',
          { 'aria-label': 'Last' },
          last === true ? '\xBB' : last
        )
      });
    }
  }, {
    key: 'renderItem',
    value: function renderItem(props) {
      var _props6 = this.props,
          onSelect = _props6.onSelect,
          buttonComponentClass = _props6.buttonComponentClass;

      return _react2.default.createElement(_PaginationButton2.default, _extends({}, props, {
        onSelect: props.disabled ? null : onSelect,
        componentClass: buttonComponentClass
      }));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props7 = this.props,
          className = _props7.className,
          props = _objectWithoutProperties(_props7, ['className']);

      var clesses = (0, _classnames2.default)(_extends({}, (0, _decorate.getClassNames)(this.props)), className);

      var elementProps = (0, _omit2.default)(props, Object.keys(propTypes));
      return _react2.default.createElement(
        'ul',
        _extends({}, elementProps, {
          className: clesses
        }),
        this.renderFirst(),
        this.renderPrev(),
        this.renderPageButtons(),
        this.renderNext(),
        this.renderLast()
      );
    }
  }]);

  return Pagination;
}(_react2.default.Component);

Pagination.propTypes = propTypes;
Pagination.defaultProps = defaultProps;

exports.default = (0, _decorate2.default)({
  size: true
})(Pagination);