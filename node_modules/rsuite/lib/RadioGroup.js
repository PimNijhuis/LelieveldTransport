'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _values = require('lodash/values');

var _values2 = _interopRequireDefault(_values);

var _isUndefined = require('lodash/isUndefined');

var _isUndefined2 = _interopRequireDefault(_isUndefined);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _isNullOrUndefined = require('./utils/isNullOrUndefined');

var _isNullOrUndefined2 = _interopRequireDefault(_isNullOrUndefined);

var _ReactChildren = require('./utils/ReactChildren');

var _ReactChildren2 = _interopRequireDefault(_ReactChildren);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  name: _propTypes2.default.string,
  inline: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  value: _propTypes2.default.any, // eslint-disable-line react/forbid-prop-types
  defaultValue: _propTypes2.default.any // eslint-disable-line react/forbid-prop-types
};

var RadioGroup = function (_React$Component) {
  _inherits(RadioGroup, _React$Component);

  function RadioGroup(props) {
    _classCallCheck(this, RadioGroup);

    var _this = _possibleConstructorReturn(this, (RadioGroup.__proto__ || Object.getPrototypeOf(RadioGroup)).call(this, props));

    _this.handleChange = _this.handleChange.bind(_this);
    _this.radios = {};
    _this.state = {
      value: props.defaultValue
    };
    return _this;
  }

  _createClass(RadioGroup, [{
    key: 'handleChange',
    value: function handleChange(value, event) {
      var onChange = this.props.onChange;

      var radios = (0, _values2.default)(this.radios);
      var shouldChange = function shouldChange(should) {
        if (should && onChange) {
          onChange(value, event);
        }
      };

      radios.forEach(function (radio, index) {
        radio.updateCheckedState(radio.props.value === value, function () {
          return shouldChange(index + 1 === radios.length);
        });
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          className = _props.className,
          inline = _props.inline,
          name = _props.name,
          value = _props.value,
          children = _props.children,
          onChange = _props.onChange,
          props = _objectWithoutProperties(_props, ['className', 'inline', 'name', 'value', 'children', 'onChange']);

      var clesses = (0, _classnames2.default)({
        'radio-list': true
      }, className);

      var nextValue = (0, _isUndefined2.default)(value) ? this.state.value : value;
      var items = _ReactChildren2.default.mapCloneElement(children, function (child, index) {

        var childProps = {
          inline: inline,
          name: name,
          checked: (0, _isNullOrUndefined2.default)(nextValue) ? child.props.checked : nextValue === child.props.value,
          onChange: _this2.handleChange,
          ref: function ref(_ref) {
            _this2.radios[index] = _ref;
          }
        };

        if (child.type.displayName === 'Radio') {
          return childProps;
        }

        return child.props;
      });
      return _react2.default.createElement(
        'div',
        _extends({}, props, {
          className: clesses,
          role: 'button'
        }),
        items
      );
    }
  }]);

  return RadioGroup;
}(_react2.default.Component);

RadioGroup.propTypes = propTypes;

exports.default = RadioGroup;