'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _domLib = require('dom-lib');

var _Overlay = require('rsuite-utils/lib/Overlay');

var _omit = require('lodash/omit');

var _omit2 = _interopRequireDefault(_omit);

var _pick = require('lodash/pick');

var _pick2 = _interopRequireDefault(_pick);

var _isNullOrUndefined = require('./utils/isNullOrUndefined');

var _isNullOrUndefined2 = _interopRequireDefault(_isNullOrUndefined);

var _createChainedFunction = require('./utils/createChainedFunction');

var _createChainedFunction2 = _interopRequireDefault(_createChainedFunction);

var _isOneOf = require('./utils/isOneOf');

var _isOneOf2 = _interopRequireDefault(_isOneOf);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function handleMouseOverOut(handler, event) {
  var target = event.currentTarget;
  var related = event.relatedTarget || event.nativeEvent.toElement;

  if ((!related || related !== target) && !(0, _domLib.contains)(target, related)) {
    handler(event);
  }
}

var propTypes = _extends({}, (0, _omit2.default)(_Overlay.Overlay.propTypes, ['target', 'onHide', 'show']), {
  trigger: _propTypes2.default.oneOfType([_propTypes2.default.oneOf(['click', 'hover', 'focus']), _propTypes2.default.arrayOf(_propTypes2.default.oneOf(['click', 'hover', 'focus']))]),
  delay: _propTypes2.default.number,
  delayShow: _propTypes2.default.number,
  delayHide: _propTypes2.default.number,
  defaultOverlayShown: _propTypes2.default.bool,
  speaker: _propTypes2.default.node.isRequired,
  onBlur: _propTypes2.default.func,
  onClick: _propTypes2.default.func,
  onFocus: _propTypes2.default.func,
  onMouseLeave: _propTypes2.default.func
});

var defaultProps = {
  defaultOverlayShown: false,
  trigger: ['hover', 'focus'],
  rootClose: true
};

var Whisper = function (_React$Component) {
  _inherits(Whisper, _React$Component);

  function Whisper(props, context) {
    _classCallCheck(this, Whisper);

    var _this = _possibleConstructorReturn(this, (Whisper.__proto__ || Object.getPrototypeOf(Whisper)).call(this, props, context));

    _this.handleMouseOver = function (e) {
      return handleMouseOverOut(_this.handleDelayedShow, e);
    };
    _this.handleMouseOut = function (e) {
      return handleMouseOverOut(_this.handleDelayedHide, e);
    };

    _this.handleToggle = _this.handleToggle.bind(_this);
    _this.handleHide = _this.handleHide.bind(_this);
    _this.handleDelayedShow = _this.handleDelayedShow.bind(_this);
    _this.handleDelayedHide = _this.handleDelayedHide.bind(_this);
    _this.getOverlayTarget = _this.getOverlayTarget.bind(_this);

    _this.state = {
      isOverlayShown: props.defaultOverlayShown
    };
    _this.mountNode = null;
    return _this;
  }

  _createClass(Whisper, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.mountNode = document.createElement('div');
      this.renderOverlay();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      if (this.mountNode) {
        this.renderOverlay();
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      _reactDom2.default.unmountComponentAtNode(this.mountNode);
      this.mountNode = null;
      clearTimeout(this.hoverShowDelay);
      clearTimeout(this.hoverHideDelay);
    }
  }, {
    key: 'getOverlayTarget',
    value: function getOverlayTarget() {
      return (0, _reactDom.findDOMNode)(this); // eslint-disable-line react/no-find-dom-node
    }
  }, {
    key: 'getOverlay',
    value: function getOverlay() {

      var speakerProps = _extends({}, (0, _pick2.default)(this.props, Object.keys(_Overlay.Overlay.propTypes)), {
        show: this.state.isOverlayShown,
        onHide: this.handleHide,
        target: this.getOverlayTarget
      });

      var speaker = (0, _react.cloneElement)(this.props.speaker, {
        placement: speakerProps.placement
      });
      return _react2.default.createElement(
        _Overlay.Overlay,
        speakerProps,
        speaker
      );
    }
  }, {
    key: 'hide',
    value: function hide() {
      this.setState({
        isOverlayShown: false
      });
    }
  }, {
    key: 'show',
    value: function show() {
      this.setState({
        isOverlayShown: true
      });
    }
  }, {
    key: 'handleHide',
    value: function handleHide() {
      this.hide();
    }
  }, {
    key: 'handleToggle',
    value: function handleToggle() {
      if (this.state.isOverlayShown) {
        this.hide();
      } else {
        this.show();
      }
    }
  }, {
    key: 'handleDelayedShow',
    value: function handleDelayedShow() {
      var _this2 = this;

      var _props = this.props,
          delayShow = _props.delayShow,
          delay = _props.delay;

      if (!(0, _isNullOrUndefined2.default)(this.hoverHideDelay)) {
        clearTimeout(this.hoverHideDelay);
        this.hoverHideDelay = null;
        return;
      }

      if (this.state.isOverlayShown || !(0, _isNullOrUndefined2.default)(this.hoverShowDelay)) {
        return;
      }

      var nextDelay = !(0, _isNullOrUndefined2.default)(delayShow) ? delayShow : delay;

      if (!nextDelay) {
        this.show();
        return;
      }

      this.hoverShowDelay = setTimeout(function () {
        _this2.hoverShowDelay = null;
        _this2.show();
      }, nextDelay);
    }
  }, {
    key: 'handleDelayedHide',
    value: function handleDelayedHide() {
      var _this3 = this;

      var _props2 = this.props,
          delayHide = _props2.delayHide,
          delay = _props2.delay;

      if (!(0, _isNullOrUndefined2.default)(this.hoverShowDelay)) {
        clearTimeout(this.hoverShowDelay);
        this.hoverShowDelay = null;
        return;
      }

      if (!this.state.isOverlayShown || !(0, _isNullOrUndefined2.default)(this.hoverHideDelay)) {
        return;
      }

      var nextDelay = !(0, _isNullOrUndefined2.default)(delayHide) ? delayHide : delay;

      if (!nextDelay) {
        this.hide();
        return;
      }

      this.hoverHideDelay = setTimeout(function () {
        _this3.hoverHideDelay = null;
        _this3.hide();
      }, nextDelay);
    }
  }, {
    key: 'renderOverlay',
    value: function renderOverlay() {
      _reactDom2.default.unstable_renderSubtreeIntoContainer(this, this.speaker, this.mountNode);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props3 = this.props,
          children = _props3.children,
          speaker = _props3.speaker,
          onClick = _props3.onClick,
          trigger = _props3.trigger,
          onMouseOver = _props3.onMouseOver,
          onMouseOut = _props3.onMouseOut,
          onFocus = _props3.onFocus,
          onBlur = _props3.onBlur;


      var triggerComponent = _react2.default.Children.only(children);
      var triggerProps = triggerComponent.props;

      var props = {
        'aria-describedby': speaker.props.id
      };

      this.speaker = this.getOverlay();

      props.onClick = (0, _createChainedFunction2.default)(triggerProps.onClick, onClick);

      if ((0, _isOneOf2.default)('click', trigger)) {
        props.onClick = (0, _createChainedFunction2.default)(this.handleToggle, props.onClick);
      }

      if ((0, _isOneOf2.default)('hover', trigger)) {
        props.onMouseOver = (0, _createChainedFunction2.default)(this.handleMouseOver, onMouseOver, triggerProps.onMouseOver);
        props.onMouseOut = (0, _createChainedFunction2.default)(this.handleMouseOut, onMouseOut, triggerProps.onMouseOut);
      }

      if ((0, _isOneOf2.default)('focus', trigger)) {

        props.onFocus = (0, _createChainedFunction2.default)(this.handleDelayedShow, onFocus, triggerProps.onFocus);

        props.onBlur = (0, _createChainedFunction2.default)(this.handleDelayedHide, onBlur, triggerProps.onBlur);
      }

      return (0, _react.cloneElement)(triggerComponent, props);
    }
  }]);

  return Whisper;
}(_react2.default.Component);

Whisper.propTypes = propTypes;
Whisper.defaultProps = defaultProps;

exports.default = Whisper;